# This workflow combines Bandit (via third-party wrapper), Ruff, and Pylint with SARIF output

name: Python Static Analysis

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  # Uncomment below to run weekly on Wednesday at 21:32 UTC
  # schedule:
  #   - cron: '32 21 * * 3'

jobs:
  bandit:
    name: Bandit Scan
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read

    steps:
      - uses: actions/checkout@v4

      - name: Bandit Scan
        uses: shundor/python-bandit-scan@ab1d87dfccc5a0ffab88be3aaac6ffe35c10d6cd
        with:
          exit_zero: true
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  ruff:
    name: Ruff - Linter
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - run: pip install ruff

      - name: Run Ruff with SARIF output
        run: |
          ruff check . --output-format sarif > ruff-results.sarif || true

      - name: Upload Ruff SARIF
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: ruff-results.sarif

  pylint:
    name: Pylint - Static Code Analysis
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install Pylint and SARIF converter
        run: |
          pip install pylint
          pip install pylint-json2sarif

      - name: Run Pylint and generate SARIF
        run: |
          pylint $(git ls-files '*.py') --output-format=json:pylint-output.json || true
          python -m pylint_json2sarif -i pylint-output.json -o pylint-results.sarif

      - name: Upload Pylint SARIF
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: pylint-results.sarif
